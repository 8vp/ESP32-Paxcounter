; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html


; ---> SELECT TARGET PLATFORM HERE! <---
[platformio]
;env_default = heltec
;env_default = ttgov1
;env_default = ttgov2
env_default = ttgov21
;env_default = ttgobeam
;env_default = lopy
;env_default = lopy4
;env_default = fipy
;env_default = lolin32lite
;env_default = lolin32
;
description = Paxcounter is a proof-of-concept ESP32 device for metering passenger flows in realtime. It counts how many mobile devices are around.

[common_env_data]
;platform_espressif32 = espressif32@1.0.2
;platform_espressif32 = espressif32@1.1.2
platform_espressif32 = https://github.com/platformio/platform-espressif32.git#feature/stage
board_build.partitions = no_ota.csv
lib_deps_all =
lib_deps_display =
    U8g2@>=2.23.12
lib_deps_rgbled =
    SmartLeds@>=1.1.3
lib_deps_gps =
    TinyGPSPlus@>=1.0.2
build_flags = 
; we need build_flag for logging, otherwise we can't use ESP_LOGx in arduino framework
; ---> NOTE: For production run set DEBUG_LEVEL level to NONE! <---
; otherwise device may crash in dense environments due to serial buffer overflow
;
; -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_NONE
; -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO
  -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
; -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE
;
; override lora settings from LMiC library in lmic/config.h and use main.h instead
    -D_lmic_config_h_
    -include "src/paxcounter.conf"
    -w

[env:heltec]
platform = ${common_env_data.platform_espressif32}
framework = arduino
board = heltec_wifi_lora_32
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 115200 
lib_deps = 
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_display}
build_flags = 
    ${common_env_data.build_flags}
    -include "src/hal/heltec.h"

[env:ttgov1]
platform = ${common_env_data.platform_espressif32}
framework = arduino
board = esp32dev
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 115200 
lib_deps = 
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_display}
build_flags = 
    ${common_env_data.build_flags}
    -include "src/hal/ttgov1.h"

[env:ttgov2]
platform = ${common_env_data.platform_espressif32}
framework = arduino
board = esp32dev
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 921600
lib_deps = 
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_display}
build_flags = 
    ${common_env_data.build_flags}
    -include "src/hal/ttgov2.h"

[env:ttgov21]
platform = ${common_env_data.platform_espressif32}
framework = arduino
board = esp32dev
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 921600
lib_deps = 
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_display}
build_flags = 
    ${common_env_data.build_flags}
    -include "src/hal/ttgov21.h"

[env:ttgobeam]
platform = ${common_env_data.platform_espressif32}
framework = arduino
board = esp32dev
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 921600
lib_deps = 
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_gps}
build_flags = 
    ${common_env_data.build_flags}
    -include "src/hal/ttgobeam.h"
    -include 

[env:fipy]
platform = ${common_env_data.platform_espressif32}
framework = arduino
board = esp32dev
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 921600
lib_deps = 
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_rgbled}
build_flags = 
    ${common_env_data.build_flags}
    -include "src/hal/fipy.h"

[env:lopy]
platform = ${common_env_data.platform_espressif32}
framework = arduino
board = esp32dev
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 921600
lib_deps = 
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_rgbled}
    ${common_env_data.lib_deps_gps}
build_flags = 
    ${common_env_data.build_flags}
    -include "src/hal/lopy.h"

[env:lopy4]
platform = ${common_env_data.platform_espressif32}
framework = arduino
board = esp32dev
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 921600
lib_deps =
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_rgbled}
    ${common_env_data.lib_deps_gps}
build_flags =
    ${common_env_data.build_flags}
    -include "src/hal/lopy4.h"

[env:lolin32lite]
platform = ${common_env_data.platform_espressif32}
framework = arduino
board = lolin32
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 256000
lib_deps = 
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_rgbled}
build_flags =
    ${common_env_data.build_flags}
    -include "src/hal/lolin32lite_lora.h"

[env:lolin32]
platform = ${common_env_data.platform_espressif32}
framework = arduino 
board = lolin32
board_build.partitions = ${common_env_data.board_build.partitions}
monitor_speed = 115200
upload_speed = 921600
lib_deps = 
    ${common_env_data.lib_deps_all}
    ${common_env_data.lib_deps_rgbled}
build_flags =
    ${common_env_data.build_flags}
    -include "src/hal/lolin32_lora.h"
